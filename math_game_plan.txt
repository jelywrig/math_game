Player
state: 
name
lives (initialized to 3)
behavior:
get lives
lose life



Game
- players array
-curr player
- winner

behavior
initialize with players, winner = nil
play game  - main loop while not won
  calls turn with curr player
  receives result
  if false updates lives of current player
  call check scores

outside loop "Good-Bye"  

check_scores private method
checks for win and prints winning text and sets won
  else 
  prints current score
  prints new turn


Turn
-what the question is, 
- player

behavior
initilize gets new question, stores player name
- play turn - prints question (puts self.question.to_s), chomps answer, checks Answer (question.checkAnser()), print result text, returns result (bool from check answer)

Question
- num1
- num 2
- operator
- answer
- Operators {+ : plus, - : minus , / : divided by , * times }
Behavior
- initialize takes no args,  randomly selects, num 1, num 2, operator
- calculates and sets answer
-question to string
- check answer returns true or false  - 